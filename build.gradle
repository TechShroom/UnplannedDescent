ext.FTP_USER="ket1999"
version = ext.version = "1.0.0"

subprojects {
    apply plugin: 'java'
}
apply from: 'util.gradle', to: project

// token: a54f9f87121b530f4a918f7b156efb2c259ff0db

// ext.oauth = "a54f9f87121b530f4a918f7b156efb2c259ff0db"

task doBuild {}

apply from: 'github.gradle', to: project

def subdeps = [:]
def submvn = [:]

File[] dirList(String dir) {
    file(dir).listFiles({file -> file.isDirectory() && !file.getName().startsWith(".")} as FileFilter).sort()
}

void add(item, value) {
    if (item.key != value) {
        item.value.add(value)
    }
}

dirList(".").each{
    subdeps[it.getName()] = []
    submvn[it.getName()] = ['org.lwjgl.lwjgl:lwjgl:3.0.0', 'com.techshroom:StepBuilder:1.0.0']
}

subdeps.entrySet().each{
    add(it, "UDCore")
}

subdeps['UDWindows'].add('UDKeyboard')

subprojects {
    println "=== Configuring $name ==="

    def root = getParent()
    root.doBuild.dependsOn(":$name:build")

    // java 7 compat
    compileJava.sourceCompatibility = '1.7'
    compileJava.targetCompatibility = '1.7'
    version = root.version

    jar {
        version = root.version
    }

    apply plugin: 'eclipse'
    apply plugin: 'apt2'
    
    eclipse {
        jdt {
            sourceCompatibility = 1.6
            targetCompatibility = 1.6
        }
    }

    // eclipse bug workaround
    task reeclipse(dependsOn: ['cleanEclipseClasspath', 'eclipse'])

    repositories {
        mavenCentral()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        flatDir dirs: "../lib/lwjgl"
    }
    
    configurations.all {
       resolutionStrategy {
            // fail eagerly on version conflict (includes transitive dependencies)
            // e.g. multiple different versions of the same dependency (group and name are equal)
            failOnVersionConflict()

            // force certain versions of dependencies (including transitive)
            force 'com.google.auto.service:auto-service:1.0-rc2'
            force 'com.google.guava:guava:18.0'
            force 'com.squareup:javawriter:2.5.1'

            cacheDynamicVersionsFor 10, 'minutes'
            // don't cache changing modules at all
            cacheChangingModulesFor 0, 'seconds'
        }
    }

    dependencies {
        submvn[name].each{
            compile "$it"
        }

        subdeps[name].each{
            compile project(":$it")
        }
        
        compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.0.2'
        compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.0.2'
        compile group: 'net.sf.jopt-simple', name: 'jopt-simple', version: '4.7'
        compile group: 'com.google.code.gson', name: 'gson', version: '2.3'
        compile 'com.google.inject:guice:3.0'
        compile 'org.functionaljava:functionaljava:4.2-beta-1'
        // I think this is only for java 8 // compile 'org.functionaljava:functionaljava-java8:4.2-beta-1'
        addAPTReqWComp group: 'com.google.guava', name: 'guava', version: '18.0'
        addAPTReqWComp group: 'com.squareup', name: 'javawriter', version: '2.5.1'
        addAPT group: 'com.google.auto.factory', name: 'auto-factory', version: '0.1-beta1'
        addAPT group: 'com.google.auto.service', name: 'auto-service', version: '1.0-rc2'
        addAPT group: 'com.google.auto.value', name: 'auto-value', version: '1.0-rc4'
        addAPTReq name: 'aopalliance'
        addAPTReq name: 'asm'
        addAPTReq name: 'auto-value'
        addAPTReq name: 'auto-common'
        addAPTReq name: 'cglib'
        addAPTReq name: 'commons-collections'
        addAPTReq name: 'commons-lang'
        addAPTReq name: 'dagger'
        addAPTReq name: 'javax.inject'
        addAPTReq name: 'velocity'

        testCompile group: 'junit', name: 'junit', version: '4.+'
    }

    println '=== Complete ==='
}

if (_hasProperty("TRAVIS") && _property("TRAVIS").toBoolean()) {
    apply from: 'travis.gradle', to: project
}
