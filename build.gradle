boolean hasJDK6RT() {
    return getJDK6RT() != null
}

String getJDK6RT() {
    if (hasProperty("JAVA6_HOME")) {
        return property("JAVA6_HOME") + "/jre/lib/rt.jar"
    }
    if (hasProperty("JAVA_HOME") && System.getProperty("java.version").startsWith("1.6")) {
        return property("JAVA_HOME") + "/jre/lib/rt.jar"
    }
    if (hasProperty("JDK6_RT")) {
        return property("JDK6_RT")
    }
    return null
}

if (!hasJDK6RT()) {
    throw new RuntimeException("Need to know where your JDK6 rt.jar is! " +
    "(set JAVA6_HOME to a jdk6 home or set JDK6_RT to the rt.jar)")
}

def oauth = ""
version = "1.0.0"
def subdeps = [:]

File[] dirList(String dir) {
    file(dir).listFiles({file -> file.isDirectory() && !file.getName().startsWith(".")} as FileFilter).sort()
}

dirList(".").each{
    subdeps[it.getName()] = []
}

subdeps.entrySet().each{
    if (it.key != "UDCore")
        it.value.add("UDCore")
}

subprojects {
    println "=== Configuring $name ==="
    apply plugin: 'java'

    // java 6 compat
    compileJava.sourceCompatibility = '1.6'
    compileJava.options.bootClasspath = getJDK6RT()

    apply plugin: 'eclipse'
    
    // eclipse bug workaround
    task reeclipse(dependsOn: ['cleanEclipseClasspath', 'eclipse'])

    repositories {
        mavenCentral()
    }

    dependencies {
        compile group: 'net.sf.sociaal', name: 'lwjgl', version: '3.+'

        subdeps[name].each{
            compile project(":$it")
        }

        testCompile group: 'junit', name: 'junit', version: '4.+'
    }
    println '=== Complete ==='
}

buildscript {
    repositories {
        mavenCentral()
    }
    
    
    dependencies {
    }
}

task doBuild << {
    subprojects {
        build.execute()
    }
}

task release(dependsOn: 'doBuild') {
}
